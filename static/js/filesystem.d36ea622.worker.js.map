{"version":3,"file":"static/js/filesystem.d36ea622.worker.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/comlink/src/comlink.ts","service-workers/components/uuid.js","service-workers/components/com.js","service-workers/components/hash.js","utils/console.js","service-workers/workers/filesystem.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","/* eslint-disable no-bitwise, no-mixed-operators */\n/**\n * Generate a universally unique identifier (v4-like, not up to standard)\n * By: @Esinko\n*/\n// eslint-disable-next-line import/prefer-default-export\nexport function v4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n        const r = Math.random() * 16 | 0\n        const v = c === \"x\" ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n    })\n}\n","/* eslint-disable no-restricted-globals */\nimport * as uuid from \"./uuid\"\n\n// Create the global onMessage handler\nconst messageTarget = new EventTarget()\n// eslint-disable-next-line no-undef\nself.addEventListener(\"message\", (e) => {\n    if (typeof e.data !== \"string\") return\n    const messageEmitter = new CustomEvent(\"message\", {\n        detail: JSON.parse(e.data)\n    })\n    messageTarget.dispatchEvent(messageEmitter)\n})\nexport default {\n    async send(type, content = {}) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve) => {\n            const id = uuid.v4()\n            // Send message\n            postMessage(JSON.stringify({ type, content, id: content.id || id }))\n\n            // Listen for response\n            messageTarget.addEventListener(\"message\", async (e) => {\n                if (e.detail.id !== null && e.detail.id === id) {\n                    messageTarget.removeEventListener(\"message\", e)\n                    resolve(e.detail.content)\n                }\n            })\n        })\n    },\n    async sendToWorker(target, content = {}) {\n        // eslint-disable-next-line consistent-return\n        return new Promise((resolve, reject) => {\n            const id = uuid.v4()\n            // Send message\n            if (content.id !== undefined) content.callback = true\n            if (!target && content.id === undefined) {\n                reject(new Error(\"Target must be specified\"))\n                return\n            }\n            postMessage(JSON.stringify({\n                type: \"relay\", target, content, id: content.id || id\n            }))\n\n            // Listen for response\n            messageTarget.addEventListener(\"message\", async (e) => {\n                if (e.detail.id !== null && e.detail.id === id) {\n                    messageTarget.removeEventListener(\"message\", e)\n                    resolve(e.detail.content)\n                }\n            })\n        })\n    },\n    onMessage: messageTarget\n}\n","/* eslint-disable no-restricted-globals */\n/**\n * Implement hashing functionality\n *\n * By: @Esinko\n */\nimport com from \"./com\"\n\nexport default class hash {\n    /**\n     * The input for the hashing algorithm\n     * @param {String} input The string to hash\n     */\n    constructor(input) {\n        (async () => {\n            let id = null\n            if (typeof window === \"undefined\") {\n                // Get window object from main\n                const salt = (await com.send(\"window\")).window.id\n                self.id = salt.id\n                id = salt.id\n            } else if (self.id !== undefined) {\n                id = self.id\n            } else {\n                id = window.id\n            }\n            this.input = `${input}-${id}`\n        })()\n    }\n\n    /**\n     * Hash the data with the SHA1 algorithm\n     */\n    async sha1() {\n        try {\n            return Array.from(new Uint8Array(await crypto.subtle.digest(\"SHA-1\", new TextEncoder(\"utf-8\").encode(this.input)))).map((b) => (`00${b.toString(16)}`).slice(-2)).join(\"\")\n        } catch (err) {\n            throw `Failed to hash data: ${err.stack}` !== undefined ? err.stack : err\n        }\n    }\n}\n","/* eslint-disable no-param-reassign, no-console */\n// import * as uuid from \"./worker-components/uuid.js\"\n\n/**\n * Generate console component configuration\n */\nexport function consoleConfig() {\n    // No actions to be done here, just return the base tree\n    return {\n        list: [\n            // These values will be put behind a wrapper for log collection\n            \"log\",\n            \"error\",\n            \"info\",\n            \"trace\",\n            \"warn\",\n            \"debug\"\n        ],\n        cache: {},\n        logs: [],\n        color: {\n            warn: \"yellow\",\n            error: \"red\",\n            log: \"limegreen\",\n            default: \"limegreen\"\n        }\n    }\n}\n\n/**\n * Try to stringify an object\n * @param {Object} obj\n */\nfunction tryStringify(obj) {\n    try {\n        const str = JSON.stringify(obj)\n        return str\n    } catch (e) {\n        return \"{ stringify failed }\"\n    }\n}\n\nfunction argsToString(args) {\n    if (typeof args === \"string\") return [args]\n    if (typeof args === \"object\" && !Array.isArray(args)) return [tryStringify(args)]\n    return args\n        // eslint-disable-next-line no-nested-ternary\n        .map((arg) => (typeof arg === \"object\" && !Array.isArray(arg) ? tryStringify(arg) : Array.isArray(arg) ? argsToString(arg) : arg))\n        .filter((arg) => arg.length !== 0)\n        .map((arg) => arg.toString())\n        .map((arg) => arg.replace(/\\\\\"/g, \"\\\"\"))\n}\n\n/**\n * Console wrapper to collect logs to an internal variable.\n * By: @Esinko (11.02.2021)\n */\nexport default (window) => {\n    // Don't rewrite twice\n    // console.debug(\"[ Console ] Rewriting console functions...\")\n    if (console.rewritten === true) return\n    // console.debug(\"[ Console ] Can rewrite\")\n\n    // Workers don't have window available\n    // So here we create a dummy object\n    if (window === undefined || window.console === undefined) window = { internal: { console: consoleConfig() }, isDummy: true }\n\n    // Redefine all the functions\n    for (const func of window.internal.console.list) {\n        window.internal.console.cache[func] = console[func]\n        const { color } = window.internal.console // I feel lazy\n        console[func] = (...args) => {\n            // Apply colors\n            if (args[0] !== undefined && typeof args[0].startsWith === \"function\" && args[0].startsWith(\"[\") && args[0].includes(\"]\")) {\n                let args0 = `${args[0].split(\"]\")[0]}]`\n                // eslint-disable-next-line prefer-destructuring\n                args[0] = args[0].split(\"]\")[1]\n                args0 = `%c${args0}`\n                if (args[0] !== \"\") {\n                    args[0] = args[0].trimLeft()\n                    args.splice(\n                        0, 0, \"\"\n                    )\n                }\n                // window.internal.console.cache[func](args, args.length)\n                window.internal.console.cache[func](\n                    `${args0}%s`, `color: ${color[func]}` ?? `${color.default};`, ...args\n                )\n            } else if (!args.includes(\"%c\")) { // Ignore if we already have styling\n                // Execute the actual function from cache\n                const args0 = \"%c[ ❓ ] \" // Unknown or prefix not specified\n                window.internal.console.cache[func](\n                    args0, `color: ${color[func]}` ?? `${color.default};`, ...args\n                )\n            } else {\n                window.internal.console.cache[func](...args)\n            }\n            // Write the data to the cache\n            // TODO: Parse css (style) code from the args?\n            if (!window.isDummy) { // True for workers\n                const formattedArgs = argsToString(args)\n                window.internal.console.logs.push(`[ ${new Date().getTime() - window.internal.timeAtLive}s - ${func.toUpperCase()} ] ${formattedArgs.join(\" \")}`)\n                // Max length is 1000 messages\n                if (window.internal.console.logs.length > 1000) window.internal.console.logs.shift()\n            }\n        }\n    }\n\n    // Define marker for rewritten functions\n    // console.debug(\"[ Console ] Console functions rewritten\")\n    console.rewritten = true\n}\n","/* eslint-disable class-methods-use-this */\n/* global importScripts, localforage */\n/**\n * Main filesystem worker made to handle all tasks related to answer saving.\n * Uses LocalForage to store data in the browsers indexDB while automatically\n * falling back to normal local storage when required.\n * By: @Esinko\n */\n\n// 3rd-party internal dependencies\nimport * as Comlink from \"comlink\"\n\n// Internal dependencies\nimport * as uuid from \"../components/uuid\"\nimport hash from \"../components/hash\"\nimport com from \"../components/com\"\nimport consoleWrapper from \"../../utils/console\"\n\n// 3rd-party external dependencies\nimportScripts([\"/3rd-party/localforage.js\"])\nconst localForage = localforage\n\n// Configure console\nconsoleWrapper()\n\n// Comlink configuration\nconst thisWorker = {\n    async init() {\n        // For now nothing needs to be here\n        thisWorker.shared.ready = true\n        return true\n    },\n    shared: {\n        ready: false,\n        filesystem_instances: {},\n        id: null // Modified by \"workers.js\"\n    }\n}\nComlink.expose(thisWorker)\n\n// Main class\n/**\n * Filesystem class\n */\nclass Filesystem {\n    /**\n     * Create a new filesystem instance\n     * @param {number} type Filesystem type ID\n     */\n    constructor(type) {\n        this.type = parseInt(type, 10) // Force int\n        this.id = uuid.v4()\n        // Instance memory\n        this.index = [] // Index contains the structure\n        this.data = {} // Data is one huge dump of id = <data>\n        thisWorker.shared.filesystem_instances[this.id] = this\n    }\n\n    /**\n     * Validate checksum for a string\n     */\n    async validate(string, checksum) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                const hashObj = new hash(string)\n                const sha1 = await hashObj.sha1() // Is this enough?\n                console.debug(\n                    \"[ Filesystem ] Checksum calculation\", string, checksum, sha1\n                )\n                if (checksum === sha1) {\n                    resolve(true)\n                } else {\n                    resolve(false)\n                }\n            } catch (e) {\n                reject(new Error(`Failed to validate checksum: ${e.stack}`))\n            }\n        })\n    }\n\n    /**\n     * Read data from the dump\n     * @param {*} id\n     */\n    async read(id) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                switch (this.type) {\n                /**\n                 * -----------------------------------------------\n                 * Implement filesystem reading for each type here\n                 * -----------------------------------------------\n                 */\n                case 0: {\n                    console.debug(\"[ Filesystem ] Preparing read task...\")\n                    const json = JSON.parse(await localForage.getItem(id))\n                    console.debug(\"[ Filesystem ] Read raw data:\", json)\n                    console.debug(\"[ Filesystem ] Validating checksum...\")\n                    const jsonData = { name: json.name, date: json.date }\n                    if (json.data) jsonData.data = json.data // Add data to checksum calculation if available\n                    const isValid = await this.validate(JSON.stringify(jsonData), json.checksum)\n                    if (isValid) {\n                        console.debug(\"[ Filesystem ] Checksum valid, read task concluded successfully.\")\n                        resolve(json)\n                    } else {\n                        // TODO: Handle this better\n                        reject(new Error(\"Failed to validate read data\"))\n                    }\n                    break\n                }\n                default:\n                    throw new Error(\"Unknown filesystem type\")\n                }\n            } catch (e) {\n                reject(new Error(`Failed to read: ${e.stack}`))\n            }\n        })\n    }\n\n    /**\n     * Write data to the index\n     * @param {*} id if true --> root\n     * @param {*} data\n     * @param {*} onlyUpdate Do not edit\n     */\n    async writeToIndex(\n        id, data, onlyUpdate\n    ) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            // eslint-disable-next-line no-param-reassign\n            if (id === undefined) id = true // Default is root\n            console.log(\"[ Filesystem ] Preparing index update...\")\n            console.debug(\"[ Filesystem ] Index snapshot before update:\", this.index)\n            console.debug(\n                \"[ Filesystem] Index entry identifier:\", id, \"data:\", data\n            )\n\n            // Do the things\n            if (!onlyUpdate) {\n                if (id === true) {\n                    // In root\n                    console.debug(\"[ Filesystem ] Writing to index root...\")\n                    let replaced = false\n                    for (let entry of this.index) {\n                        if (entry.i === data.id) {\n                            replaced = true\n                            entry = data\n                            break\n                        }\n                    }\n                    if (!replaced) this.index.push(data)\n                } else {\n                    // In folder\n                    console.debug(\"[ Filesystem ] Writing to folder...\")\n                    let replaced = false\n                    let pushed = false\n                    // TODO: Rework this\n                    // eslint-disable-next-line no-shadow\n                    const find = (tree, id) => {\n                        // eslint-disable-next-line no-plusplus\n                        for (let i = 0; i < tree.length; i++) {\n                            if (tree[i].t === 0 && tree[i].id === id) {\n                                replaced = true\n                                tree[i] = data\n                            } else if (tree[i].t === 1) {\n                                if (tree[i].i === id) {\n                                    // Replace?\n                                    // eslint-disable-next-line no-plusplus\n                                    for (let ii = 0; ii < tree[i].d.length; ii++) {\n                                        if (tree[i].d[ii].i === data.i) {\n                                            replaced = true\n                                            tree[i].d[ii] = data\n                                        }\n                                    }\n                                    if (!replaced) {\n                                        tree[i].d.push(data)\n                                        pushed = true\n                                    }\n                                    break\n                                } else {\n                                    find(tree[i].d, id)\n                                }\n                            }\n                        }\n                    }\n                    find(this.index, id)\n                    if (!replaced && !pushed) reject(new Error(\"Cannot find such location\"))\n                }\n            }\n            const hashSession = new hash(this.index)\n            const hashData = await hashSession.sha1()\n            console.debug(\"[ Filesystem ] Index after update:\", this.index)\n            switch (this.type) {\n            /**\n            * -----------------------------------------------\n            * Implement filesystem index update for each type here\n            * -----------------------------------------------\n            */\n            case 0: {\n                await localForage.setItem(\"matikkaeditori-checksums\", JSON.stringify(hashData))\n                await localForage.setItem(\"matikkaeditori-index\", JSON.stringify(this.index))\n                break\n            }\n            default:\n                throw new Error(\"Unknown filesystem type\")\n            }\n            console.log(\"[ Filesystem ] Index update completed successfully.\")\n            resolve()\n        })\n    }\n\n    /**\n     * Resolve a specific part of the index and return it\n     * @param {*} id\n     */\n    async resolveFromIndex(id) {\n        if (id === true) return this.index\n        const looper = (tree) => {\n            for (const entry of tree) {\n                if (entry.i === id) return entry\n                if (entry.t === 1) {\n                    const l = looper(entry.d)\n                    if (l !== null) return l\n                }\n            }\n            return null\n        }\n        return looper(this.index)\n    }\n\n    /**\n     * Remove a specific part of the index\n     * @param {*} id\n     */\n    async removeFromIndex(id) {\n        if (id === true) return this.index\n        const looper = (tree) => {\n            for (const entry of tree) {\n                if (entry.i === id) {\n                    // Note: Do we need to edit this\n                    tree.splice(tree.indexOf(entry), 1)\n                    this.writeToIndex(\n                        null, null, true\n                    ).then(() => true)\n                }\n                if (entry.t === 1) {\n                    const l = looper(entry.d)\n                    if (l !== null) return l\n                }\n            }\n            return null\n        }\n        return looper(this.index)\n    }\n\n    /**\n     * Limit tree level for data delivery\n     * @param {*} tree\n     * @param {*} level\n     */\n    async limitTreeLevel(tree, level) {\n        // Clone array\n        const treeClone = JSON.parse(JSON.stringify(tree))\n        const checker = (treeObject, currentLevel = 1) => {\n            for (const entry of treeObject) {\n                if (entry.t === 1) {\n                    if (level > currentLevel) {\n                        return checker(entry.d, currentLevel + 1)\n                    }\n                    entry.d = null\n                }\n            }\n            return null\n        }\n        checker(treeClone)\n        return treeClone\n    }\n\n    /**\n     * Write data to the dump\n     * @param {*} id\n     * @param {*} data\n     * @param {*} location\n     */\n    async write(\n        id, data, location\n    ) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                switch (this.type) {\n                /**\n                 * -----------------------------------------------\n                 * Implement filesystem writing for each type here\n                 * -----------------------------------------------\n                 */\n                case 0: {\n                    console.log(\"[ Filesystem ] Preparing write task...\")\n                    let json = JSON.parse(await localForage.getItem(id))\n                    if (json === null) {\n                        console.debug(\"[ Filesystem ] No previous entry found.\")\n                        json = {\n                            id: id ?? uuid.v4() // Generate id if new object\n                        }\n                    }\n                    const base = {\n                        name: data.name ?? json.name,\n                        date: data.date ?? new Date().getTime()\n                    }\n                    if (data.type === 0) {\n                        // Files have data\n                        base.data = data.data ?? json.data\n                        const hashInstance = new hash(JSON.stringify({ name: base.name, data: base.data, date: base.date }))\n                        const sha1 = await hashInstance.sha1()\n                        base.checksum = sha1\n                    } else {\n                        // Folders have no data\n                        const hashInstance = new hash(JSON.stringify({ name: base.name, date: base.date }))\n                        const sha1 = await hashInstance.sha1()\n                        base.checksum = sha1\n                    }\n                    console.debug(\"[ Filesystem ] Write task base:\", base)\n                    await localForage.setItem(id ?? json.id, JSON.stringify(base))\n                    // Update index\n                    const indexBase = { t: data.type ?? json.type, i: id ?? json.id }\n                    // TODO: This has to be redone to support moving folders and their contents\n                    const isInIndex = await this.resolveFromIndex(id ?? json.id)\n                    if (!isInIndex) {\n                        if (data.type === 1) {\n                            indexBase.d = []\n                        }\n                        await this.writeToIndex(location, indexBase)\n                    }\n                    console.log(\"[ Filesystem ] Write task completed successfully.\")\n                    resolve(id ?? json.id)\n                    break\n                }\n                default:\n                    throw new Error(\"Unknown filesystem type\")\n                }\n            } catch (e) {\n                console.debug(e)\n                reject(new Error(`Failed to write: ${e.stack}`))\n            }\n        })\n    }\n\n    /**\n     * Remove answer\n     * @param {*} id\n     */\n    async remove(id) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                switch (this.type) {\n                /**\n                 * -----------------------------------------------\n                 * Implement filesystem deletion for each type here\n                 * -----------------------------------------------\n                 */\n                case 0: {\n                    console.log(\"[ Filesystem ] Preparing remove task...\")\n                    // Remove from database\n                    if (await localForage.getItem(id) !== null) {\n                        console.log(\n                            \"[ Filesystem ] Target\", id, \"exists\"\n                        )\n                        await localForage.removeItem(id)\n                    } else {\n                        console.log(\"[ Filesystem ] Target not found\")\n                    }\n\n                    // Remove from index\n                    if (await this.resolveFromIndex(id) !== null) await this.removeFromIndex(id)\n\n                    console.log(\"[ Filesystem ] Remove task concluded\")\n                    resolve(true)\n                    break\n                }\n                default:\n                    throw new Error(\"Unknown filesystem type\")\n                }\n            } catch (e) {\n                reject(new Error(`Failed to write: ${e.stack}`))\n            }\n        })\n    }\n\n    /**\n     * Initialize the filesystem\n     */\n    async init() {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                switch (this.type) {\n                /**\n                 * ------------------------------------------------------\n                 * Implement filesystem initialization for each type here\n                 * ------------------------------------------------------\n                 */\n                case 0: {\n                    let index = await localForage.getItem(\"matikkaeditori-index\")\n                    let checksums = await localForage.getItem(\"matikkaeditori-checksums\")\n\n                    if (index !== null && checksums !== null) {\n                        index = JSON.parse(index)\n                        checksums = JSON.parse(checksums)\n                        const indexIsValid = await this.validate(index, checksums)\n                        if (!indexIsValid) {\n                            const load = await com.send(\"confirm\", \"Someone may have tampered with index data or it may be corrupt. Would you like to load it?\")\n                            if (!load) reject(new Error(\"Filesystem initialization aborted.\"))\n                        }\n                        this.index = index\n                        resolve()\n                    } else {\n                        // const create = await com.send(\"confirm\", \"No save data exists or it cannot be loaded. Would you like to create a new save?\")\n                        // if(create){\n                        // TODO: Create index & example file\n                        const exampleId = uuid.v4()\n                        const exampleFile = {\n                            name: \"Tervetuloa!\",\n                            date: new Date().getTime(),\n                            // eslint-disable-next-line no-undef\n                            // running btoa here fucks up charset äöå, so hardcoding the gibberish here\n                            data: [\"<text>VGVydmV0dWxvYSBrw6R5dHTDpG3DpMOkbiBNYXRpa2thZWRpdG9yaS5maXTDpCEg8J+OiQ==</text>\"],\n                            checksum: null,\n                            type: 0\n                        }\n                        const hashSession = new hash({ name: exampleFile.name, data: exampleFile.data, date: exampleFile.date })\n                        exampleFile.checksum = await hashSession.sha1()\n                        await this.write(\n                            exampleId, exampleFile, true\n                        )\n                        console.log(\"[ Filesystem ] Example file created\")\n                        resolve()\n                    }\n                    break\n                }\n                default:\n                    throw new Error(\"Unknown filesystem type\")\n                }\n            } catch (e) {\n                reject(new Error(`Failed to initialize filesystem: \\n${e.stack}`))\n                console.debug(e)\n            }\n        })\n    }\n}\n\ncom.onMessage.addEventListener(\"message\", async (e) => {\n    // Detail is the event data\n    // eslint-disable-next-line no-param-reassign\n    e = e.detail\n    if (!thisWorker.shared.ready) return\n    switch (e.type) {\n    case \"init\": {\n        const instance = new Filesystem(e.content.type)\n        // ID must be reused later\n        thisWorker.shared.filesystem_instances[e.id] = instance\n        await instance.init()\n        com.send(\"callback\", { id: e.id, instance: instance.id, index: instance.index })\n        break\n    }\n    case \"read\": {\n        const instance = thisWorker.shared.filesystem_instances[e.content.instance]\n        if (!instance) {\n            console.error(\"No such filesystem instance\")\n            break\n        }\n        const data = await instance.read(e.content.id)\n        com.send(\"callback\", { id: e.id, read: data })\n        break\n    }\n    case \"write\": {\n        const instance = thisWorker.shared.filesystem_instances[e.content.instance]\n        if (!instance) {\n            console.error(\"No such filesystem instance\")\n            break\n        }\n        const write = await instance.write(\n            e.content.id, e.content.write, e.content.location\n        )\n        com.send(\"callback\", { id: e.id, write })\n        break\n    }\n    case \"callback\": {\n        // Ignore these. (Handled by com.js)\n        break\n    }\n    case \"remove\": {\n        const instance = thisWorker.shared.filesystem_instances[e.content.instance]\n        if (!instance) {\n            console.error(\"No such filesystem instance\")\n            break\n        }\n        await instance.remove(e.content.id)\n        com.send(\"callback\", { id: e.id })\n        break\n    }\n    case \"move\": {\n        const instance = thisWorker.shared.filesystem_instances[e.content.instance]\n        if (!instance) {\n            console.error(\"No such filesystem instance\")\n            break\n        }\n        const currentLocation = e.content.from\n        const newLocation = e.content.to\n        // TODO: read from index & remove & write\n        const oldData = await instance.resolveFromIndex(currentLocation)\n        if (!oldData) {\n            console.error(\"No such location (read)\")\n            break\n        }\n        await instance.removeFromIndex(e.content.id)\n        if (newLocation !== true) {\n            const newLocationExists = await instance.resolveFromIndex(newLocation)\n            if (!newLocationExists) {\n                console.error(\"No such location (write)\")\n                break\n            }\n        }\n        await instance.writeToIndex(newLocation, oldData)\n        break\n    }\n    case \"index\": {\n        const instance = thisWorker.shared.filesystem_instances[e.content.instance]\n        if (!instance) {\n            console.error(\"No such filesystem instance\")\n            break\n        }\n        if (e.content.id && e.content.level) {\n            const resolved = await instance.resolveFromIndex(e.content.id)\n            let limited = null\n            if (resolved !== null) {\n                limited = await instance.limitTreeLevel(e.content.id === true ? resolved : resolved.d, e.content.level)\n            }\n            com.send(\"callback\", { index: limited, id: e.id })\n        } else {\n            com.send(\"callback\", { index: instance.index, id: e.id })\n        }\n        break\n    }\n    case \"reset\": {\n        await localForage.clear()\n        com.send(\"callback\", { id: e.id, status: \"ok\" })\n        break\n    }\n    default:\n        console.error(\"[ Filesystem ] Unknown command\", e)\n    }\n})\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_typeof","obj","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_slicedToArray","_i","_s","_arr","_n","_d","_defineProperty","_setPrototypeOf","p","bind","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_construct","Parent","Class","a","Function","_toConsumableArray","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","isError","message","stack","serialized","assign","ep","addEventListener","callback","ev","data","returnValue","path","id","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","proxy","transfer","catch","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","get","_target","requestResponseMessage","r","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","v4","replace","c","messageTarget","EventTarget","messageEmitter","CustomEvent","detail","JSON","parse","dispatchEvent","send","content","uuid","stringify","sendToWorker","onMessage","hash","input","window","com","salt","Uint8Array","crypto","subtle","digest","TextEncoder","encode","b","tryStringify","argsToString","filter","importScripts","localForage","localforage","console","rewritten","internal","list","cache","logs","color","warn","log","default","isDummy","func","startsWith","includes","args0","split","trimLeft","splice","formattedArgs","Date","getTime","timeAtLive","toUpperCase","shift","consoleWrapper","thisWorker","init","shared","ready","filesystem_instances","Comlink","Filesystem","parseInt","index","string","checksum","hashObj","sha1","debug","getItem","json","jsonData","date","validate","onlyUpdate","replaced","pushed","find","tree","t","ii","d","hashSession","hashData","setItem","looper","indexOf","writeToIndex","level","treeClone","checker","treeObject","currentLevel","location","base","hashInstance","indexBase","resolveFromIndex","removeItem","removeFromIndex","checksums","exampleId","exampleFile","write","read","remove","currentLocation","newLocation","to","oldData","resolved","limited","limitTreeLevel","clear","status"],"sourceRoot":""}